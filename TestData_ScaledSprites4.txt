; Automatically created by DisplayBombJack
; From @TC-17-3 with changes EBS/Address changes to match current schematic

; Reset
d$0
d$0
d$0

; Sprite registers
; Not ready
d$88000102
; Origin
d$880101e0
d$880201ff
d$880301e0
d$880401ff
; Extents
d$880501a8
d$88060170
; Extra address
d$88070101

; Address auto-increment using data bits 16-31
+16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,+
<0,1,2,3,4,5,6,7,<

; Sprite registers start
s$88080100

; Sprite registers start
; Sprite 0
b$00
b$10,b$10
b$20,b$10
b$00,b$20,b$02
b$08,b$08
b$03

; Sprite 1
d$88130100
d$88140140
d$88150104
d$88160140
d$88170104
d$88180100
d$88190120
d$881a0102
d$881b0120
d$881c0120
d$881d0103

; Sprite 2
d$881e0100
d$881f0180
d$88200102
d$88210180
d$88220102
d$88230100
d$88240120
d$88250102
d$88260140
d$88270140
d$88280103

; End of list
d$88290100
d$882a0100
d$882b0100

; Debug: End of list, no sprites
;d$88080100
;d$88090100
;d$880A0100
; Debug: End of list, one sprite
;d$88130100
;d$88140100
;d$88150100


; Sprite data
; Guard sprite data, should not get drawn
d$0ffc0455
d$0ffd0455
d$0ffe0455
d$0fff0455
; Real sprite data
d$10000421
d$10010443
d$10020423
d$10030401
d$10040410
d$10050432
d$10060421
d$10070443
; Guard sprite data, should not get drawn
d$10080455
d$10090455
d$100a0455
d$100b0455


; Ready
d$88000103


; Priority, borders, layer enable, background colour, palette bank
d$9e0801e4
;d$9e090129
; Setup full overscan border extents
d$9e09010f
d$9e0a010f
d$9e0b0100
d$9e0c0100

; Palette
d$9c0001e7
d$9c010138
d$9c02011f
d$9c030100
d$9c0401e0
d$9c050107
d$9c060100
d$9c0701f8
d$9c0801ff
d$9c0901ff
d$9c0a0177
d$9c0b0177

; The sprite enable signal won't get through unless the combinators are setup
; Clear and default to just combine
d$a2000160
d$a2010100
d$a2020160
d$a2030100


; Enable, priority, borders, layer enable, background colour
d$9e000130



; Frame 1
d$0
^-$01
d$0
; Frame 2
d$0
^-$01
d$0
; Frame 3
d$0
^-$01
d$0

; Waste a small amount of time
d$0
d$0
d$0
d$0
d$0
d$0

; Not ready
d$88000102

; Sprite 0
d$88080100
d$88090140
d$880a0110
d$880b0120
d$880c0110
d$880d0100
d$880e0120
d$880f0102
d$88100108
d$88110108
d$88120103

; End of list, one sprite
d$88130100
d$88140100
d$88150100

; Ready
d$88000103



; Frame 4
d$0
^-$01
d$0

; Waste a small amount of time
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0

; Not ready
d$88000102

; Sprite 0
d$88080100
d$88090150
d$880a0110
d$880b01fc	; Steps over MSBX
d$880c0110
d$880d0100
d$880e0120
d$880f0102
d$88100108
d$88110108
d$88120103

; End of list, one sprite
d$88130100
d$88140100
d$88150100

; Ready
d$88000103



; Frame 5
d$0
^-$01
d$0

; Waste a small amount of time
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0
d$0

; Not ready
d$88000102

; Sprite 0
d$88080110	; MSBX
d$88090160
d$880a0110
d$880b0110
d$880c0110
d$880d0100
d$880e0120
d$880f0102
d$88100108
d$88110108
d$88120103

; End of list, one sprite
d$88130100
d$88140100
d$88150100

; Ready
d$88000103
