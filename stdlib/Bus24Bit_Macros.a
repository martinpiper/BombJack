!macro MBus24Bit_SendLE16BitValue .value {
	lda #<.value
	sta CIA2PortBRS232
	lda #>.value
	sta CIA2PortBRS232
}

!macro MBus24Bit_SendLE16BitValueFromAddress .value {
	lda .value
	sta CIA2PortBRS232
	lda .value+1
	sta CIA2PortBRS232
}

!macro MBus24Bit_SendLE24BitValueFromAddress .value {
	lda .value
	sta CIA2PortBRS232
	lda .value+1
	sta CIA2PortBRS232
	lda .value+2
	sta CIA2PortBRS232
}

!macro MBus24Bit_Send8BitValueFromAddress .value {
	lda .value
	sta CIA2PortBRS232
}

!macro MBus24Bit_Send8BitValue .value {
	lda #.value
	sta CIA2PortBRS232
}

!macro MBus24Bit_Get8BitValueToA {
	lda CIA2PortBRS232
}


!macro MBus24Bit_Send8BitValueFromA {
	sta CIA2PortBRS232
}

!macro MBus24Bit_Send8BitValueFromX {
	stx CIA2PortBRS232
}

!macro MBus24Bit_Send8BitValueFromY {
	sty CIA2PortBRS232
}

!macro MBus24Bit_SetAddress_AXY .ebbs , .addr {
	lda #.ebbs
	+MWordValueTo_XY .addr
	jsr Bus24Bit_SetAddressBus
}

!macro MBus24Bit_SetAddress_A .ebbs , .addr {
	jsr Bus24Bit_Reset
	+MBus24Bit_Send8BitValue .ebbs
	+MBus24Bit_SendLE16BitValue .addr
}

!macro MBus24Bit_SetAddressNoReset_A .ebbs , .addr {
	+MBus24Bit_Send8BitValue .ebbs
	+MBus24Bit_SendLE16BitValue .addr
}


!macro MBus24Bit_FastSpeedCopy .label , .length {
!for .i , .length {
	lda .label + .i - 1
	sta CIA2PortBRS232
}
}

!macro MBus24Bit_FastCopyLarge .dstart , .length {
!if .length > 0 {
	+MWordValueTo_AX .dstart
	ldy #<.length
	jsr Bus24Bit_CopySmallData
;!if (<.length) = 0 {
;!set .length = .length - $100
;}
!if .length > 0 {
!if (>.length) > 0 {
	ldx #>.length
	jsr Bus24Bit_CopySmallDataRepeatForX
}
}
}
}
