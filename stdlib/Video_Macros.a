; Define this with a value to enable overscan support: kBus24Bit_VideoLayer_HasOverscan

!macro MBus24Bit_WaitUntilRasterY .raster {
!if .raster <= 255 {
.l1
	lda CIA1TimerBHi
	bne .l1
}
	+MWaitValueToMemoryCC .raster , CIA1TimerBLo
}

kBus24Bit_VideoLayer_EBBS			= $01
kBus24Bit_VideoLayer_Priority		= $9e08
kBus24Bit_VideoLayer_Priority_Default		= %11100100
!ifdef kBus24Bit_VideoLayer_HasOverscan {
kBus24Bit_VideoLayer_OverscanExtent		= $9e09
kBus24Bit_VideoLayer_OverscanExtent_Default		= $76

; This wide mode is the maximum displayable extent output by the video to HDMI conversion box
; This is 39 characters (8x8) wide by 28 characters
kBus24Bit_VideoLayer_OverscanExtent_Wide		= $39
kBus24Bit_VideoLayer_XPos_OverscanExtent_Wide_right	= $152

kBus24Bit_VideoLayer_LayersEnable		= $9e0a
kBus24Bit_VideoLayer_LayersEnable_Default		= %00001111
kBus24Bit_VideoLayer_LayersEnable_234			= %00001110
kBus24Bit_VideoLayer_LayersEnable_None			= %00000000

kBus24Bit_VideoLayer_XPos_HSYNC_start			= $160
kBus24Bit_VideoLayer_XPos_HSYNC_end				= $17e
kBus24Bit_VideoLayer_XPos_SpriteIndex_0			= $000
kBus24Bit_VideoLayer_XPos_SpriteIndex_4			= $040
kBus24Bit_VideoLayer_XPos_SpriteIndex_8			= $080
kBus24Bit_VideoLayer_XPos_SpriteIndex_12		= $0c0
kBus24Bit_VideoLayer_XPos_SpriteIndex_16		= $100
kBus24Bit_VideoLayer_XPos_SpriteIndex_20		= $140
}
kBus24Bit_VideoLayer_Palette		= $9c00

kBus24Bit_VideoLayer_Priority_Sprites		= %00
kBus24Bit_VideoLayer_Priority_Chars			= %01
kBus24Bit_VideoLayer_Priority_Tiles			= %10
kBus24Bit_VideoLayer_Priority_Background	= %11
kBus24Bit_VideoLayer_Priority_Mode7			= %11

kBus24Bit_VideoLayer_Priority_Pixel0		= %00
kBus24Bit_VideoLayer_Priority_Pixel1		= %01
kBus24Bit_VideoLayer_Priority_Pixel2		= %10
kBus24Bit_VideoLayer_Priority_Pixel3		= %11

!macro MBus24Bit_VideoLayer_EmitPriority_NearToFar_A .near , .middleNear , .middleFar , .far {
	lda #(.far << 6) | (.middleFar << 4) | (.middleNear << 2) | .near
	sta CIA2PortBRS232
}

!ifndef kBus24Bit_SpritesMaxNum {
kBus24Bit_SpritesMaxNum				= 24
}
kBus24Bit_Sprites_MSBX				= $10
kBus24Bit_Sprites_MaxX				= $180

kBus24Bit_Sprites_EBBS				= $01
!ifdef kBus24Bit_VideoLayer_HasOverscan {
kBus24Bit_Sprites					= $9800
} else {
kBus24Bit_Sprites					= $9820
}
kBus24Bit_SpritesControlLo			= $9a00
!ifndef kBus24Bit_VideoLayer_HasOverscan {
kBus24Bit_SpritesControlLoEnable	= $10
}
kBus24Bit_SpritesControlHi			= $9a01

kBus24Bit_SpritePlanes_EBBS			= $10
kBus24Bit_SpritePlanes_0			= $2000
kBus24Bit_SpritePlanes_1			= $4000
kBus24Bit_SpritePlanes_2			= $8000
kBus24Bit_SpritePlanes_3			= $0000


kBus24Bit_Video_FlipH = $40
kBus24Bit_Video_FlipV = $80

kBus24Bit_Sprite_FullHeight = $20

kVideo_EnableDisplay_Tiles_Enable			= $10
kVideo_EnableDisplay_Enable					= $20
kVideo_EnableDisplay_Tiles_BorderXShrink	= $40
kVideo_EnableDisplay_Tiles_BorderYShrink	= $80

kBus24Bit_TileScreen_EBBS			= $01
kBus24Bit_TileScreen_EnableBorders	= $9e00
kBus24Bit_TileScreen_ScrollX16		= $9e01
kBus24Bit_TileScreen_ScrollY16		= $9e03
kBus24Bit_TileScreen_Background		= $9e07

kBus24Bit_TileScreenMap_EBBS		= $80
kBus24Bit_TileScreenMap				= $2000
kBus24Bit_TileColourMap				= $3000

kBus24Bit_TileScreenPlanes_EBBS		= $40
kBus24Bit_TileScreenPlanes_0		= $2000
kBus24Bit_TileScreenPlanes_1		= $4000
kBus24Bit_TileScreenPlanes_2		= $8000
kBus24Bit_TileScreenPlanes_3		= $0000


kBus24Bit_Mode7Screen_EBBS			= $01
kBus24Bit_Mode7Screen_Registers		= $a000

!macro MBus24Bit_MakePaletteRGB .r , .g , .b {
	+MLittleEndian16Bit (.r>>4) | ((.g>>4)<<4) | ((.b>>4)<<8)
}
!macro MBus24Bit_SendPaletteRGB .r , .g , .b {
	lda #< ((.r>>4) | ((.g>>4)<<4) | ((.b>>4)<<8))
	sta CIA2PortBRS232
	lda #> ((.r>>4) | ((.g>>4)<<4) | ((.b>>4)<<8))
	sta CIA2PortBRS232
}



kBus24Bit_CharScreen_EBBS			= $01
kBus24Bit_CharScreen_Control		= $9000
kBus24Bit_CharScreen_Control_DisableChars	= $02
kBus24Bit_CharScreen_ScrollX16		= $9001
kBus24Bit_CharScreen_ScrollY16		= $9003

kBus24Bit_CharScreenMap_EBBS		= $80
kBus24Bit_CharScreenMap				= $4000
!ifdef kBus24Bit_VideoLayer_HasOverscan {
kBus24Bit_CharColourMap				= $8000
kBus24Bit_CharScreenWidth			= 128
} else {
kBus24Bit_CharColourMap				= $5000
kBus24Bit_CharScreenWidth			= 64
}
kBus24Bit_CharScreenHeight			= 64

kBus24Bit_CharScreenPlanes_EBBS		= $20
kBus24Bit_CharScreenPlanes_0		= $2000
kBus24Bit_CharScreenPlanes_1		= $4000
kBus24Bit_CharScreenPlanes_2		= $8000
kBus24Bit_CharScreenPlanes_3		= $0000


!macro LinePlane16 .v {
!set .t = *
	!by (.v>>8)&255
* = .t + 8
	!by .v&255
* = .t + 1
}

!macro LinePlane8 .v {
	!by .v&255
}
