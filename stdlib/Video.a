!zn
; Waits for the start of the _VBLANK to be triggered from the video, which is a negative edge on the _VBLANK line
Bus24Bit_WaitVBlank
	; ACK Any previous VBLANK
	lda CIA2InterruptControl

	; Wait for VBLANK event
	lda #%10000
.l1
	bit CIA2InterruptControl
	beq .l1
	rts


Bus24Bit_DisableDisplay
	jsr Bus24Bit_SetAddressVideoControlRegisters
	lda #$00
	sta CIA2PortBRS232
	rts


; A = Value to use for the video initialisation
Bus24Bit_EnableDisplay
	pha
	jsr Bus24Bit_SetAddressVideoControlRegisters
	pla
	sta CIA2PortBRS232
	rts

	
; A/X = lo/hi address
; Y = length
Bus24Bit_SpriteDataCopy
	pha
	jsr Bus24Bit_SetAddressSprites
	pla
	jmp Bus24Bit_CopySmallData


Bus24Bit_SetAddressVideoControlRegisters
	jsr Bus24Bit_Reset
	lda #$01; EBBS
	sta CIA2PortBRS232
	lda #$00
	sta CIA2PortBRS232
	lda #$9e
	sta CIA2PortBRS232
	rts


Bus24Bit_SetAddressTileScrollRegisters
	jsr Bus24Bit_Reset
	lda #$01; EBBS
	sta CIA2PortBRS232
	lda #$01
	sta CIA2PortBRS232
	lda #$9e
	sta CIA2PortBRS232
	rts


Bus24Bit_SetAddressPalette
	jsr Bus24Bit_Reset
	lda #$01; EBBS
	sta CIA2PortBRS232
	lda #$00
	sta CIA2PortBRS232
	lda #$9c
	sta CIA2PortBRS232
	rts


Bus24Bit_SetAddressSprites
	jsr Bus24Bit_Reset
	lda #$01; EBBS
	sta CIA2PortBRS232
	lda #$20
	sta CIA2PortBRS232
	lda #$98
	sta CIA2PortBRS232
	rts


Bus24Bit_SetAddressSpritesControl
	jsr Bus24Bit_Reset
	lda #$01; EBBS
	sta CIA2PortBRS232
	lda #$00
	sta CIA2PortBRS232
	lda #$9a
	sta CIA2PortBRS232
	rts
