!zn
HardwareTest_Char_0
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %#.#.##..
+LinePlane8 %#..###..
+LinePlane8 %#..###..
+LinePlane8 %.####...
+LinePlane8 %........
HardwareTest_Char_1
+LinePlane8 %...##...
+LinePlane8 %..###...
+LinePlane8 %.##.#...
+LinePlane8 %....#...
+LinePlane8 %....#...
+LinePlane8 %....#...
+LinePlane8 %..####..
+LinePlane8 %........
HardwareTest_Char_2
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %...##...
+LinePlane8 %..##....
+LinePlane8 %.##.....
+LinePlane8 %##......
+LinePlane8 %######..
+LinePlane8 %........
HardwareTest_Char_3
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %....##..
+LinePlane8 %..###...
+LinePlane8 %....##..
+LinePlane8 %##..##..
+LinePlane8 %.####...
+LinePlane8 %........
HardwareTest_Char_4
+LinePlane8 %...###..
+LinePlane8 %..##.#..
+LinePlane8 %.##..#..
+LinePlane8 %######..
+LinePlane8 %....##..
+LinePlane8 %....##..
+LinePlane8 %....##..
+LinePlane8 %........
HardwareTest_Char_5
+LinePlane8 %.#####..
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %.####...
+LinePlane8 %....##..
+LinePlane8 %....##..
+LinePlane8 %#####...
+LinePlane8 %........
HardwareTest_Char_6
+LinePlane8 %.####...
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %.####...
+LinePlane8 %........
HardwareTest_Char_7
+LinePlane8 %######..
+LinePlane8 %....##..
+LinePlane8 %...##...
+LinePlane8 %..##....
+LinePlane8 %..##....
+LinePlane8 %..##....
+LinePlane8 %..##....
+LinePlane8 %........
HardwareTest_Char_8
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %.####...
+LinePlane8 %........
HardwareTest_Char_9
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %.#####..
+LinePlane8 %....##..
+LinePlane8 %....##..
+LinePlane8 %....##..
+LinePlane8 %........
HardwareTest_Char_A
+LinePlane8 %..##....
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %######..
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %........
HardwareTest_Char_B
+LinePlane8 %#####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %#####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %#####...
+LinePlane8 %........
HardwareTest_Char_C
+LinePlane8 %.####...
+LinePlane8 %##..##..
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %##..##..
+LinePlane8 %.####...
+LinePlane8 %........
HardwareTest_Char_D
+LinePlane8 %#####...
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %##..##..
+LinePlane8 %#####...
+LinePlane8 %........
HardwareTest_Char_E
+LinePlane8 %######..
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %######..
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %######..
+LinePlane8 %........
HardwareTest_Char_F
+LinePlane8 %######..
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %######..
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %##......
+LinePlane8 %........
; Last blank char
!fill 8 , 0

!zn
HardwareTest_VideoInit
	jsr Bus24Bit_Init
	jsr Video_DisableDisplay
	rts

HardwareTest_VideoInitDisplay
	jsr Video_InitDisplaySpritesScrollsBackground
	lda #kVideo_EnableDisplay_Enable | kVideo_EnableDisplay_Tiles_Enable
	jsr Video_EnableDisplay
	jsr Video_SetAddressTileBackgroundRegister
	lda #0
	sta CIA2PortBRS232
	rts

!macro HardwareTest_SendBitplaneData .a , .b {
	+MWordValueTo_AX HardwareTest_Char_0
	ldy #8*.a
	jsr Bus24Bit_FastCopySmallData
	lda #0
	ldy #8*.b
	jsr Bus24Bit_WriteAForY

	+MWordValueTo_AX HardwareTest_Char_0 + ((.a+.b)*8)
	ldy #8*.a
	jsr Bus24Bit_FastCopySmallData
	lda #0
	ldy #8*.b
	jsr Bus24Bit_WriteAForY

	+MWordValueTo_AX HardwareTest_Char_0 + ((.a+.b)*8*2)
	ldy #8*.a
	jsr Bus24Bit_FastCopySmallData
	lda #0
	ldy #8*.b
	jsr Bus24Bit_WriteAForY

	+MWordValueTo_AX HardwareTest_Char_0 + ((.a+.b)*8*3)
	ldy #8*.a
	jsr Bus24Bit_FastCopySmallData
	lda #0
	ldy #8*.b
	jsr Bus24Bit_WriteAForY

	+MWordValueTo_AX HardwareTest_Char_0 + ((.a+.b)*8*4)
	ldy #8*.a
	jsr Bus24Bit_FastCopySmallData
	lda #0
	ldy #8*.b
	jsr Bus24Bit_WriteAForY
}

!zn
HardwareTest_VideoPattern0
	jsr HardwareTest_VideoInit
	jsr HardwareTest_VideoInitDisplay

	jsr Video_SetAddressPalette
	+MBus24Bit_SendPaletteRGB 0 , 0 , 0
	+MBus24Bit_SendPaletteRGB 255 , 0 , 0
	+MBus24Bit_SendPaletteRGB 0 , 255 , 0
	+MBus24Bit_SendPaletteRGB 0 , 0 , 255
	+MBus24Bit_SendPaletteRGB 0 , 255 , 255
	+MBus24Bit_SendPaletteRGB 255 , 255 , 0
	+MBus24Bit_SendPaletteRGB 255 , 255 , 255
	+MBus24Bit_SendPaletteRGB 200 , 200 , 200
	+MBus24Bit_SendPaletteRGB 150 , 150 , 150
	+MBus24Bit_SendPaletteRGB 100 , 100 , 100
	+MBus24Bit_SendPaletteRGB 50 , 50 , 50
	+MBus24Bit_SendPaletteRGB 255 , 0 , 0
	+MBus24Bit_SendPaletteRGB 0 , 255 , 0
	+MBus24Bit_SendPaletteRGB 0 , 0 , 255
	+MBus24Bit_SendPaletteRGB 0 , 255 , 255
	+MBus24Bit_SendPaletteRGB 255 , 255 , 0

	; Chars
	+MBus24Bit_SetAddress_AXY kBus24Bit_CharScreenMap_EBBS , kBus24Bit_CharScreenMap
	lda #0
	tay
	jsr Bus24Bit_WriteAForY
!ifdef kBus24Bit_VideoLayer_HasOverscan {
	jsr Bus24Bit_WriteAForY
}

	ldx #32
.fl1
	+MBus24Bit_Send8BitValue 0
	+MBus24Bit_Send8BitValue 1
	+MBus24Bit_Send8BitValue 2
	+MBus24Bit_Send8BitValue 3
	dex
	bne .fl1

	lda #1
	jsr Bus24Bit_WriteAForY
!ifdef kBus24Bit_VideoLayer_HasOverscan {
	jsr Bus24Bit_WriteAForY
}
	lda #2
	jsr Bus24Bit_WriteAForY
!ifdef kBus24Bit_VideoLayer_HasOverscan {
	jsr Bus24Bit_WriteAForY
}
	lda #3
	jsr Bus24Bit_WriteAForY
!ifdef kBus24Bit_VideoLayer_HasOverscan {
	jsr Bus24Bit_WriteAForY
}
	lda #$10
	ldx #3
	jsr Bus24Bit_WriteAForYThenX
!ifdef kBus24Bit_VideoLayer_HasOverscan {
	ldx #3
	jsr Bus24Bit_WriteAForYThenX
}

	ldx #64
.fl2
	txa
	and #$0f
	+MBus24Bit_Send8BitValueFromA
	dex
	bne .fl2


	+MBus24Bit_SetAddress_AXY kBus24Bit_CharScreenMap_EBBS , kBus24Bit_CharColourMap
	lda #0
	tay
	ldx #2
	jsr Bus24Bit_WriteAForYThenX
	lda #kBus24Bit_Video_FlipH
	ldx #1
	jsr Bus24Bit_WriteAForYThenX
	lda #kBus24Bit_Video_FlipV
	ldx #1
	jsr Bus24Bit_WriteAForYThenX
	lda #kBus24Bit_Video_FlipH | kBus24Bit_Video_FlipV
	ldx #1
	jsr Bus24Bit_WriteAForYThenX
!ifdef kBus24Bit_VideoLayer_HasOverscan {
	lda #0
	ldx #10
	jsr Bus24Bit_WriteAForYThenX
}


	+MBus24Bit_SetAddress_AXY kBus24Bit_CharScreenPlanes_EBBS , kBus24Bit_CharScreenPlanes_0
	+HardwareTest_SendBitplaneData 4 , 1

	+MBus24Bit_SetAddress_AXY kBus24Bit_CharScreenPlanes_EBBS , kBus24Bit_CharScreenPlanes_1
	+HardwareTest_SendBitplaneData 3 , 2

	+MBus24Bit_SetAddress_AXY kBus24Bit_CharScreenPlanes_EBBS , kBus24Bit_CharScreenPlanes_2
	+HardwareTest_SendBitplaneData 2 , 3

	+MBus24Bit_SetAddress_AXY kBus24Bit_CharScreenPlanes_EBBS , kBus24Bit_CharScreenPlanes_3
	+HardwareTest_SendBitplaneData 7 , 1

	; Tiles
	+MBus24Bit_SetAddress_AXY kBus24Bit_TileScreenMap_EBBS , kBus24Bit_TileScreenMap
	lda #1
	ldy #0
	jsr Bus24Bit_WriteAForY
	jsr Bus24Bit_WriteAForY
	lda #1
	ldy #$c0
	jsr Bus24Bit_WriteAForY
	lda #0
	ldy #$40
	jsr Bus24Bit_WriteAForY
	lda #1
	ldy #$40
	jsr Bus24Bit_WriteAForY
	lda #0
	ldy #$40
	jsr Bus24Bit_WriteAForY
	lda #1
	ldy #0
	jsr Bus24Bit_WriteAForY

	+MBus24Bit_SetAddress_AXY kBus24Bit_TileScreenMap_EBBS , kBus24Bit_TileColourMap
	lda #0
	tay
	ldx #4
	jsr Bus24Bit_WriteAForYThenX

	+MBus24Bit_SetAddress_AXY kBus24Bit_TileScreenPlanes_EBBS , kBus24Bit_TileScreenPlanes_0
	+HardwareTest_SendBitplaneData 4 , 4

	+MBus24Bit_SetAddress_AXY kBus24Bit_TileScreenPlanes_EBBS , kBus24Bit_TileScreenPlanes_1
	+HardwareTest_SendBitplaneData 3 , 5

	+MBus24Bit_SetAddress_AXY kBus24Bit_TileScreenPlanes_EBBS , kBus24Bit_TileScreenPlanes_2
	+HardwareTest_SendBitplaneData 2 , 6

	+MBus24Bit_SetAddress_AXY kBus24Bit_TileScreenPlanes_EBBS , kBus24Bit_TileScreenPlanes_3
	+HardwareTest_SendBitplaneData 1 , 7


	; Sprites
	+MBus24Bit_SetAddress_AXY kBus24Bit_SpritePlanes_EBBS , kBus24Bit_SpritePlanes_0
	+HardwareTest_SendBitplaneData 4 , 1
	lda #$ff
	ldy #8
	jsr Bus24Bit_WriteAForY
	+HardwareTest_SendBitplaneData 4 , 1

	+MBus24Bit_SetAddress_AXY kBus24Bit_SpritePlanes_EBBS , kBus24Bit_SpritePlanes_1
	+HardwareTest_SendBitplaneData 3 , 2
	lda #$ff
	ldy #8
	jsr Bus24Bit_WriteAForY
	+HardwareTest_SendBitplaneData 3 , 2

	+MBus24Bit_SetAddress_AXY kBus24Bit_SpritePlanes_EBBS , kBus24Bit_SpritePlanes_2
	+HardwareTest_SendBitplaneData 2 , 3
	lda #$ff
	ldy #8
	jsr Bus24Bit_WriteAForY
	+HardwareTest_SendBitplaneData 2 , 3

	+MBus24Bit_SetAddress_AXY kBus24Bit_SpritePlanes_EBBS , kBus24Bit_SpritePlanes_3
	+HardwareTest_SendBitplaneData 1 , 4
	lda #$ff
	ldy #8
	jsr Bus24Bit_WriteAForY
	+HardwareTest_SendBitplaneData 1 , 4

	jsr Video_SetAddressSpritesControl
!ifndef kBus24Bit_VideoLayer_HasOverscan {
	lda #kBus24Bit_SpritesControlLoEnable
} else {
	lda #0
}
	sta CIA2PortBRS232
	lda #$04
	sta CIA2PortBRS232

	jsr Video_SetAddressSprites
	lda #0
	sta CIA2PortBRS232
	sta CIA2PortBRS232
	lda #90
	sta CIA2PortBRS232
	sta CIA2PortBRS232

	sta CIA2PortBRS232
	sta CIA2PortBRS232
	sta CIA2PortBRS232
	sta CIA2PortBRS232

	lda #0
	sta CIA2PortBRS232
	sta CIA2PortBRS232
	lda #90
	sta CIA2PortBRS232
	lda #150
	sta CIA2PortBRS232

	lda #0
	sta CIA2PortBRS232
	lda #kBus24Bit_Sprite_FullHeight
	sta CIA2PortBRS232
	lda #90
	sta CIA2PortBRS232
	lda #200
	sta CIA2PortBRS232

	; If fire is held down, then pause on this screen
	+WaitForFireRelease_A

	rts
