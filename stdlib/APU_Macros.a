; Instructions, can be combined
kAPU_Reset_ADDRB1		= %00000000000000000000000000000001
kAPU_Reset_PC			= %00000000000000000000000000000010
kAPU_InterceptBus		= %00000000000000000000000000000100
kAPU_WaitForEqualsHV	= %00000000000000000000000000001000
kAPU_Reset_EBSEADDR		= %00000000000000000000000000010000
kAPU_Incr_ADDRB1		= %00000000000000000000000000100000
kAPU_Incr_EADDR			= %00000000000000000000000001000000
kAPU_ExternalMEWR		= %00000000000000000000000010000000		; This is timed to pulse low on the PCINCR (cycle 3)

; 8th bit
kAPU_Load_EBS			= %00000000000000000000000100000000
kAPU_Load_EADDRLo		= %00000000000000000000001000000000
kAPU_Load_EADDRHi		= %00000000000000000000010000000000
kAPU_Load_Wait24		= %00000000000000000000100000000000
kAPU_Load_Wait16		= %00000000000000000001000000000000
kAPU_Load_Wait8			= %00000000000000000010000000000000

; New instructions
kAPU_SelectEBS2EADDR2	= %00000000000000000100000000000000
kAPU_Load_EBS2			= %00000000000000001000000000000000
; 16th bit
kAPU_Load_EADDR2Lo		= %00000000000000010000000000000000
kAPU_Load_EADDR2Hi		= %00000000000000100000000000000000
kAPU_Incr_EADDR2		= %00000000000001000000000000000000

; Do not combine these IDataSelect values
kAPU_IDataSelectRAM		= %00000000000000000000000000000000
kAPU_IDataSelectReg0	= %00000000000010000000000000000000
kAPU_IDataSelectReg1	= %00000000000100000000000000000000
kAPU_IDataSelectReg2	= %00000000000110000000000000000000
kAPU_IDataSelectMask	= %00000000000110000000000000000000

kAPU_IDataRegLoad0		= %00000000001000000000000000000000
kAPU_IDataRegLoad1		= %00000000010000000000000000000000
kAPU_IDataRegLoad2		= %00000000100000000000000000000000

; 24th bit
kAPU_ADDRB2Select		= %00000001000000000000000000000000
kAPU_Incr_ADDRB2		= %00000010000000000000000000000000
kAPU_ADDRB1Load16		= %00000100000000000000000000000000
kAPU_ADDRB2Load16		= %00001000000000000000000000000000
kAPU_PCLoad16			= %00010000000000000000000000000000


!macro MAPU .i {
	!by <(.i)
	!by <(.i >> 8)
	!by <(.i >> 16)
	!by <(.i >> 24)
}
!macro MAPU {
	+MAPU 0
}
