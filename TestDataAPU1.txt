; Blank (address $0000)
d0

; Address auto-increment using data bits 16-31
+16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,+
<0,1,2,3,4,5,6,7,<

; Write control registers
; Reset APU
d$20000400
d$20000401

; PC		12 bits of APU PC (the other half of the 8 KB RAM is used for potential decision points, conditional branching instructions)
; A			8 bit register
; WAIT		32 bit value to wait for when comparing RHRV (and other signals)
; ADDRB1	16 bit current address for APU memory bank 1 data
; APUEBS	8 bit value containing the EBS
; APUEADDR	16 bit value for the external memory bus

s$80000400
<0,1,2,3,4,5,6,7,<TestAPU1.bin


; Store data into APU memory bank 1 data
s$40000400

; Sprite register EBS+address
b$01
b$20
b$98

; Value to store in $9820
b$11
; Next RHRV to wait for
b$f8,b$01,b$81,b$00
; Value to store in $9821
b$12




; Enable APU after writing memory
d$20000403

d$0

