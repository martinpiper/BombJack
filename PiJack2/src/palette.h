//
// palette.h
// Palette definitions
//
// PiGFX is a bare metal kernel for the Raspberry Pi
// that implements a basic ANSI terminal emulator with
// the additional support of some primitive graphics functions.
// Copyright (C) 2020 Christian Lehner

#ifndef _PALETTE_H_
#define _PALETTE_H_

#define NB_PALETTE_ELE 256
#define NB_PALETTES      4

typedef enum
{
    pal_xterm,
    pal_vga,
    pal_custom,
    pal_c64
} tenPalette;

unsigned int palette[NB_PALETTES][NB_PALETTE_ELE] =
{
// xterm palette (0)
// https://commons.wikimedia.org/wiki/File:Xterm_256color_chart.svg
{
// 16 half/full bright RGB colors
0x000000,  0x800000,  0x008000,  0x808000,  0x000080,
0x800080,  0x008080,  0xc0c0c0,  0x808080,  0xff0000,
0x00ff00,  0xffff00,  0x0000ff,  0xff00ff,  0x00ffff,
0xffffff,
// gradients
0x000000,  0x00005f,  0x000087,  0x0000af,
0x0000df,  0x0000ff,  0x005f00,  0x005f5f,  0x005f87,
0x005faf,  0x005fdf,  0x005fff,  0x008700,  0x00875f,
0x008787,  0x0087af,  0x0087df,  0x0087ff,  0x00af00,
0x00af5f,  0x00af87,  0x00afaf,  0x00afdf,  0x00afff,
0x00df00,  0x00df5f,  0x00df87,  0x00dfaf,  0x00dfdf,
0x00dfff,  0x00ff00,  0x00ff5f,  0x00ff87,  0x00ffaf,
0x00ffdf,  0x00ffff,  0x5f0000,  0x5f005f,  0x5f0087,
0x5f00af,  0x5f00df,  0x5f00ff,  0x5f5f00,  0x5f5f5f,
0x5f5f87,  0x5f5faf,  0x5f5fdf,  0x5f5fff,  0x5f8700,
0x5f875f,  0x5f8787,  0x5f87af,  0x5f87df,  0x5f87ff,
0x5faf00,  0x5faf5f,  0x5faf87,  0x5fafaf,  0x5fafdf,
0x5fafff,  0x5fdf00,  0x5fdf5f,  0x5fdf87,  0x5fdfaf,
0x5fdfdf,  0x5fdfff,  0x5fff00,  0x5fff5f,  0x5fff87,
0x5fffaf,  0x5fffdf,  0x5fffff,  0x870000,  0x87005f,
0x870087,  0x8700af,  0x8700df,  0x8700ff,  0x875f00,
0x875f5f,  0x875f87,  0x875faf,  0x875fdf,  0x875fff,
0x878700,  0x87875f,  0x878787,  0x8787af,  0x8787df,
0x8787ff,  0x87af00,  0x87af5f,  0x87af87,  0x87afaf,
0x87afdf,  0x87afff,  0x87df00,  0x87df5f,  0x87df87,
0x87dfaf,  0x87dfdf,  0x87dfff,  0x87ff00,  0x87ff5f,
0x87ff87,  0x87ffaf,  0x87ffdf,  0x87ffff,  0xaf0000,
0xaf005f,  0xaf0087,  0xaf00af,  0xaf00df,  0xaf00ff,
0xaf5f00,  0xaf5f5f,  0xaf5f87,  0xaf5faf,  0xaf5fdf,
0xaf5fff,  0xaf8700,  0xaf875f,  0xaf8787,  0xaf87af,
0xaf87df,  0xaf87ff,  0xafaf00,  0xafaf5f,  0xafaf87,
0xafafaf,  0xafafdf,  0xafafff,  0xafdf00,  0xafdf5f,
0xafdf87,  0xafdfaf,  0xafdfdf,  0xafdfff,  0xafff00,
0xafff5f,  0xafff87,  0xafffaf,  0xafffdf,  0xafffff,
0xdf0000,  0xdf005f,  0xdf0087,  0xdf00af,  0xdf00df,
0xdf00ff,  0xdf5f00,  0xdf5f5f,  0xdf5f87,  0xdf5faf,
0xdf5fdf,  0xdf5fff,  0xdf8700,  0xdf875f,  0xdf8787,
0xdf87af,  0xdf87df,  0xdf87ff,  0xdfaf00,  0xdfaf5f,
0xdfaf87,  0xdfafaf,  0xdfafdf,  0xdfafff,  0xdfdf00,
0xdfdf5f,  0xdfdf87,  0xdfdfaf,  0xdfdfdf,  0xdfdfff,
0xdfff00,  0xdfff5f,  0xdfff87,  0xdfffaf,  0xdfffdf,
0xdfffff,  0xff0000,  0xff005f,  0xff0087,  0xff00af,
0xff00df,  0xff00ff,  0xff5f00,  0xff5f5f,  0xff5f87,
0xff5faf,  0xff5fdf,  0xff5fff,  0xff8700,  0xff875f,
0xff8787,  0xff87af,  0xff87df,  0xff87ff,  0xffaf00,
0xffaf5f,  0xffaf87,  0xffafaf,  0xffafdf,  0xffafff,
0xffdf00,  0xffdf5f,  0xffdf87,  0xffdfaf,  0xffdfdf,
0xffdfff,  0xffff00,  0xffff5f,  0xffff87,  0xffffaf,
0xffffdf,  0xffffff,
// 24 gray scales
0x080808,  0x121212,  0x1c1c1c,
0x262626,  0x303030,  0x3a3a3a,  0x444444,  0x4e4e4e,
0x585858,  0x606060,  0x666666,  0x767676,  0x808080,
0x8a8a8a,  0x949494,  0x9e9e9e,  0xa8a8a8,  0xb2b2b2,
0xbcbcbc,  0xc6c6c6,  0xd0d0d0,  0xdadada,  0xe4e4e4,
0xeeeeee
},
// VGA palette (1)
// generated with this: https://github.com/canidlogic/vgapal (output modified to 3byte hex)
// The first 16 colors match the EGA color palette
// The first 16 colors match the CGA 16 color palette too
{
0x000000, 0x0000aa, 0x00aa00, 0x00aaaa,
0xaa0000, 0xaa00aa, 0xaa5500, 0xaaaaaa,
0x555555, 0x5555ff, 0x55ff55, 0x55ffff,
0xff5555, 0xff55ff, 0xffff55, 0xffffff,
0x000000, 0x141414, 0x202020, 0x2c2c2c,
0x383838, 0x454545, 0x515151, 0x616161,
0x717171, 0x828282, 0x929292, 0xa2a2a2,
0xb6b6b6, 0xcbcbcb, 0xe3e3e3, 0xffffff,
0x0000ff, 0x4100ff, 0x7d00ff, 0xbe00ff,
0xff00ff, 0xff00be, 0xff007d, 0xff0041,
0xff0000, 0xff4100, 0xff7d00, 0xffbe00,
0xffff00, 0xbeff00, 0x7dff00, 0x41ff00,
0x00ff00, 0x00ff41, 0x00ff7d, 0x00ffbe,
0x00ffff, 0x00beff, 0x007dff, 0x0041ff,
0x7d7dff, 0x9e7dff, 0xbe7dff, 0xdf7dff,
0xff7dff, 0xff7ddf, 0xff7dbe, 0xff7d9e,
0xff7d7d, 0xff9e7d, 0xffbe7d, 0xffdf7d,
0xffff7d, 0xdfff7d, 0xbeff7d, 0x9eff7d,
0x7dff7d, 0x7dff9e, 0x7dffbe, 0x7dffdf,
0x7dffff, 0x7ddfff, 0x7dbeff, 0x7d9eff,
0xb6b6ff, 0xc7b6ff, 0xdbb6ff, 0xebb6ff,
0xffb6ff, 0xffb6eb, 0xffb6db, 0xffb6c7,
0xffb6b6, 0xffc7b6, 0xffdbb6, 0xffebb6,
0xffffb6, 0xebffb6, 0xdbffb6, 0xc7ffb6,
0xb6ffb6, 0xb6ffc7, 0xb6ffdb, 0xb6ffeb,
0xb6ffff, 0xb6ebff, 0xb6dbff, 0xb6c7ff,
0x000071, 0x1c0071, 0x380071, 0x550071,
0x710071, 0x710055, 0x710038, 0x71001c,
0x710000, 0x711c00, 0x713800, 0x715500,
0x717100, 0x557100, 0x387100, 0x1c7100,
0x007100, 0x00711c, 0x007138, 0x007155,
0x007171, 0x005571, 0x003871, 0x001c71,
0x383871, 0x453871, 0x553871, 0x613871,
0x713871, 0x713861, 0x713855, 0x713845,
0x713838, 0x714538, 0x715538, 0x716138,
0x717138, 0x617138, 0x557138, 0x457138,
0x387138, 0x387145, 0x387155, 0x387161,
0x387171, 0x386171, 0x385571, 0x384571,
0x515171, 0x595171, 0x615171, 0x695171,
0x715171, 0x715169, 0x715161, 0x715159,
0x715151, 0x715951, 0x716151, 0x716951,
0x717151, 0x697151, 0x617151, 0x597151,
0x517151, 0x517159, 0x517161, 0x517169,
0x517171, 0x516971, 0x516171, 0x515971,
0x000041, 0x100041, 0x200041, 0x300041,
0x410041, 0x410030, 0x410020, 0x410010,
0x410000, 0x411000, 0x412000, 0x413000,
0x414100, 0x304100, 0x204100, 0x104100,
0x004100, 0x004110, 0x004120, 0x004130,
0x004141, 0x003041, 0x002041, 0x001041,
0x202041, 0x282041, 0x302041, 0x382041,
0x412041, 0x412038, 0x412030, 0x412028,
0x412020, 0x412820, 0x413020, 0x413820,
0x414120, 0x384120, 0x304120, 0x284120,
0x204120, 0x204128, 0x204130, 0x204138,
0x204141, 0x203841, 0x203041, 0x202841,
0x2c2c41, 0x302c41, 0x342c41, 0x3c2c41,
0x412c41, 0x412c3c, 0x412c34, 0x412c30,
0x412c2c, 0x41302c, 0x41342c, 0x413c2c,
0x41412c, 0x3c412c, 0x34412c, 0x30412c,
0x2c412c, 0x2c4130, 0x2c4134, 0x2c413c,
0x2c4141, 0x2c3c41, 0x2c3441, 0x2c3041,
0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000
}
,
// custom palette (2)
// to be loaded with control codes
{

}
,
// C64 palette (3)
// https://www.c64-wiki.com/wiki/Color
{
0x000000, 0xFFFFFF, 0x880000, 0xAAFFEE,
0xCC44CC, 0x00CC55, 0x0000AA, 0xEEEE77,
0xDD8855, 0x664400, 0xFF7777, 0x333333,
0x777777, 0xAAFF66, 0x0088FF, 0xBBBBBB
}
};

#endif
