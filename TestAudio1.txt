d0

; Audio registers
; Loop and active = 0
d$802c0100
d$802d0100

d0

; Some sample data
d$e0000401
d$e0010402
d$e0020403
d$e0040404
d$e0050405

d$00000401
d$00010412
d$00020423
d$00030434
d$00040445
d$00050456

; Test each sample data 8K bank
d$00010412
d$20020402
d$40030403
d$40200401
d$40210402
d$40220403
d$40240404
d$60040404
d$80040405
d$a0040406
d$c0040407
d$e0000401
d$e0010402
d$e0020403
d$e0040404
d$e0050405

d0

; Voice 0
; Volume
d$80000180
; Address
d$80010102
d$80020100
; Length
d$80030104
d$80040100
; Rate
d$80050140
d$80060102
; Loop address
d$80070120
d$80080140
; Loop length
d$80090103
d$800a0100


; Voice 1
; Volume
d$800b0180
; Address
d$800c0102
d$800d0100
; Length
d$800e0104
d$800f0100
; Rate
d$80100180
d$80110101
; Loop address
d$80120120
d$80130140
; Loop length
d$80140103
d$80150100


; Voice 2
; Volume
d$80160180
; Address
d$80170102
d$80180100
; Length
d$80190104
d$801a0100
; Rate
d$801b0110
d$801c0101
; Loop address
d$801d0120
d$801e0140
; Loop length
d$801f0103
d$80200100


; Voice 3
; Volume
d$80210180
; Address
d$80220102
d$80230100
; Length
d$80240104
d$80250100
; Rate
d$802601f0
d$80270100
; Loop address
d$80280120
d$80290140
; Loop length
d$802a0103
d$802b0100


; Turn on voice 0/2 looping and voice 0/1/2/3
d$802c0105
d$802d010f

d0

; Wait for the audio clock AUDCLK to start after 250m
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01
^-$01


; This should not trigger voice 1 & 3 again, since the voice has not been explicitly disabled by a control register write
; Note: Audio V9.2 fixes a bug observed in DebugAudio1.txt at line 2085 where the voice was incorrectly started again
d$802d010f

d0
